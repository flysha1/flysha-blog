import comp from "D:/code/vuepress/flysha-blog/src/.vuepress/.temp/pages/前端技术/JavaScript/OOP/类/类的继承.html.vue"
const data = JSON.parse("{\"path\":\"/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/OOP/%E7%B1%BB/%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF.html\",\"title\":\"类的继承\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":2,\"date\":\"2018-01-01T00:00:00.000Z\",\"category\":[\"前端技术\"],\"tag\":[\"JavaScript\"],\"gitInclude\":[]},\"headers\":[{\"level\":2,\"title\":\"使用方法\",\"slug\":\"使用方法\",\"link\":\"#使用方法\",\"children\":[]},{\"level\":2,\"title\":\"访问父类\",\"slug\":\"访问父类\",\"link\":\"#访问父类\",\"children\":[]},{\"level\":2,\"title\":\"super\",\"slug\":\"super\",\"link\":\"#super\",\"children\":[{\"level\":3,\"title\":\"普通方法\",\"slug\":\"普通方法\",\"link\":\"#普通方法\",\"children\":[]},{\"level\":3,\"title\":\"静态方法\",\"slug\":\"静态方法\",\"link\":\"#静态方法\",\"children\":[]}]},{\"level\":2,\"title\":\"类的原型对象\",\"slug\":\"类的原型对象\",\"link\":\"#类的原型对象\",\"children\":[]},{\"level\":2,\"title\":\"内置对象的继承\",\"slug\":\"内置对象的继承\",\"link\":\"#内置对象的继承\",\"children\":[]}],\"readingTime\":{\"minutes\":6.44,\"words\":1932},\"filePathRelative\":\"前端技术/JavaScript/OOP/类/类的继承.md\",\"localizedDate\":\"2018年1月1日\",\"excerpt\":\"\\n<p>继承，是子类继承父类的特征和行为，使得子类对象具有父类的实例域和方法。 继承是面向对象编程中，不可或缺的一部分。</p>\\n<h2>使用方法</h2>\\n<p>与 ES5 通过修改原型链实现继承不同，类通过 <code>extends</code> 关键字实现继承，继承父类的所有属性和方法。</p>\\n<div class=\\\"language-js line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Parent</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">class</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Child</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> extends</span><span style=\\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\\"> Parent</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">  constructor</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic\\\">    super</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">}</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
