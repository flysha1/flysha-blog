import comp from "D:/code/vuepress/flysha-blog/src/.vuepress/.temp/pages/前端技术/JavaScript/基本语法/运算符/位运算移位运算符.html.vue"
const data = JSON.parse("{\"path\":\"/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/JavaScript/%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/%E8%BF%90%E7%AE%97%E7%AC%A6/%E4%BD%8D%E8%BF%90%E7%AE%97%E7%A7%BB%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6.html\",\"title\":\"位运算移位运算符\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":10,\"date\":\"2018-01-01T00:00:00.000Z\",\"category\":[\"前端技术\"],\"tag\":[\"JavaScript\"],\"gitInclude\":[]},\"headers\":[{\"level\":2,\"title\":\"位运算符\",\"slug\":\"位运算符\",\"link\":\"#位运算符\",\"children\":[{\"level\":3,\"title\":\"按位与\",\"slug\":\"按位与\",\"link\":\"#按位与\",\"children\":[]},{\"level\":3,\"title\":\"按位或\",\"slug\":\"按位或\",\"link\":\"#按位或\",\"children\":[]},{\"level\":3,\"title\":\"按位异或\",\"slug\":\"按位异或\",\"link\":\"#按位异或\",\"children\":[]},{\"level\":3,\"title\":\"按位非\",\"slug\":\"按位非\",\"link\":\"#按位非\",\"children\":[]},{\"level\":3,\"title\":\"左移\",\"slug\":\"左移\",\"link\":\"#左移\",\"children\":[]},{\"level\":3,\"title\":\"右移\",\"slug\":\"右移\",\"link\":\"#右移\",\"children\":[]},{\"level\":3,\"title\":\"无符号右移\",\"slug\":\"无符号右移\",\"link\":\"#无符号右移\",\"children\":[]}]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]},{\"level\":2,\"title\":\"最佳实践\",\"slug\":\"最佳实践\",\"link\":\"#最佳实践\",\"children\":[{\"level\":3,\"title\":\"取整\",\"slug\":\"取整\",\"link\":\"#取整\",\"children\":[]},{\"level\":3,\"title\":\"值交换\",\"slug\":\"值交换\",\"link\":\"#值交换\",\"children\":[]},{\"level\":3,\"title\":\"十进制转二进制\",\"slug\":\"十进制转二进制\",\"link\":\"#十进制转二进制\",\"children\":[]},{\"level\":3,\"title\":\"颜色值转换\",\"slug\":\"颜色值转换\",\"link\":\"#颜色值转换\",\"children\":[]},{\"level\":3,\"title\":\"判断正负\",\"slug\":\"判断正负\",\"link\":\"#判断正负\",\"children\":[]},{\"level\":3,\"title\":\"判断符号是否相同\",\"slug\":\"判断符号是否相同\",\"link\":\"#判断符号是否相同\",\"children\":[]},{\"level\":3,\"title\":\"判断奇偶\",\"slug\":\"判断奇偶\",\"link\":\"#判断奇偶\",\"children\":[]},{\"level\":3,\"title\":\"判断索引是否存在\",\"slug\":\"判断索引是否存在\",\"link\":\"#判断索引是否存在\",\"children\":[]},{\"level\":3,\"title\":\"标志位判断\",\"slug\":\"标志位判断\",\"link\":\"#标志位判断\",\"children\":[]}]}],\"readingTime\":{\"minutes\":8.12,\"words\":2436},\"filePathRelative\":\"前端技术/JavaScript/基本语法/运算符/位运算移位运算符.md\",\"localizedDate\":\"2018年1月1日\",\"excerpt\":\"\\n<p>位运算符将它的操作数视为 32 位元的二进制串（0 和 1 组成）而非十进制、八进制或十六进制数。例如：十进制数字 <code>9</code> 用二进制表示为 <code>1001</code>，位运算符就是在这个二进制表示上执行运算，但是返回结果是标准的 JavaScript 数值。</p>\\n<ul>\\n<li>所有 JavaScript 数字存储为根为 10 的 64（8 比特）浮点数。JavaScript 不是类型语言。与许多其他编程语言不同，JavaScript 不定义不同类型的数字，比如整数、短、长、浮点等等。</li>\\n<li>整数精度（不使用小数点或指数计数法）最多为 15 位。小数精度的最大位数是 17，但是浮点运算并不总是 100% 准确。</li>\\n<li>位运算直接对二进制位进行计算，位运算直接处理每一个比特位，是非常底层的运算，好处是速度极快，缺点是很不直观，许多场合不能够使用。</li>\\n<li>位运算只对整数起作用，如果一个运算数不是整数，会自动转为整数后再运行。</li>\\n<li>在 JavaScript 内部，数值都是以 64 位浮点数的形式储存，但是做位运算的时候，是以 32 位带符号的整数进行运算的，并且返回值也是一个 32 位带符号的整数。</li>\\n</ul>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
